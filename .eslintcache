[{"/Users/beckhaywood/dev/repos/chops/src/App.js":"1","/Users/beckhaywood/dev/repos/chops/src/reportWebVitals.js":"2","/Users/beckhaywood/dev/repos/chops/src/google-signin.js":"3","/Users/beckhaywood/dev/repos/chops/src/Components/Snaps/snap.js":"4","/Users/beckhaywood/dev/repos/chops/src/Components/Comment/sendComment.js":"5","/Users/beckhaywood/dev/repos/chops/src/index.js":"6","/Users/beckhaywood/dev/repos/chops/src/firebase.js":"7","/Users/beckhaywood/dev/repos/chops/src/MakePost.js":"8","/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignUp.js":"9","/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignInModal.js":"10","/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignUpModal.js":"11","/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignIn.js":"12","/Users/beckhaywood/dev/repos/chops/src/Pages/Homepage.js":"13","/Users/beckhaywood/dev/repos/chops/src/Pages/Feed.js":"14","/Users/beckhaywood/dev/repos/chops/src/Components/Post/Post.js":"15","/Users/beckhaywood/dev/repos/chops/src/Components/Navbar/Navbar.js":"16","/Users/beckhaywood/dev/repos/chops/src/Components/Post/MakePost.js":"17","/Users/beckhaywood/dev/repos/chops/src/Components/Post/PostForm.js":"18","/Users/beckhaywood/dev/repos/chops/src/Components/Comment/comment.js":"19"},{"size":432,"mtime":1616006772955,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1615834195721,"results":"22","hashOfConfig":"21"},{"size":162,"mtime":1615834195720,"results":"23","hashOfConfig":"21"},{"size":1424,"mtime":1615937771175,"results":"24","hashOfConfig":"21"},{"size":1339,"mtime":1616003302485,"results":"25","hashOfConfig":"21"},{"size":499,"mtime":1615834195720,"results":"26","hashOfConfig":"21"},{"size":401,"mtime":1615834195720,"results":"27","hashOfConfig":"21"},{"size":769,"mtime":1616002296511,"results":"28","hashOfConfig":"21"},{"size":3440,"mtime":1616006449976,"results":"29","hashOfConfig":"21"},{"size":1594,"mtime":1616006498245,"results":"30","hashOfConfig":"21"},{"size":1599,"mtime":1616006487424,"results":"31","hashOfConfig":"21"},{"size":1923,"mtime":1616006494700,"results":"32","hashOfConfig":"21"},{"size":2213,"mtime":1616006916252,"results":"33","hashOfConfig":"21"},{"size":2895,"mtime":1616010246301,"results":"34","hashOfConfig":"21"},{"size":2523,"mtime":1616010115624,"results":"35","hashOfConfig":"21"},{"size":628,"mtime":1616006685753,"results":"36","hashOfConfig":"21"},{"size":1138,"mtime":1616010169852,"results":"37","hashOfConfig":"21"},{"size":680,"mtime":1616008550300,"results":"38","hashOfConfig":"21"},{"size":357,"mtime":1615938344222,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1yrxplk",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"42"},"/Users/beckhaywood/dev/repos/chops/src/App.js",[],["90","91"],"/Users/beckhaywood/dev/repos/chops/src/reportWebVitals.js",[],"/Users/beckhaywood/dev/repos/chops/src/google-signin.js",[],["92","93"],"/Users/beckhaywood/dev/repos/chops/src/Components/Snaps/snap.js",["94","95"],"import React, {useState} from \"react\";\nimport firebase from '../../firebase.js';\nimport snapTrue from './snapTrue.png'\nimport snapFalse from './snapFalse.png'\n\nfunction Snap({ snaps, snapActive, id }) {\n    console.log(snapActive)\n    const [curSnaps, setSnap] = useState(snaps)\n    const [curSnapActive, setSnapActive] = useState(snapActive)\n\n    function handleSnap() {\n        if (curSnapActive === true) {\n            // delete snap\n            // firebase.database().ref(`/items/${id}/snaps`).set(curSnaps - 1);\n\n            firebase.database().ref(`/items/${id}`).update({ snaps: curSnaps - 1});\n            firebase.database().ref(`/items/${id}`).update({ snapActive: false});\n            setSnapActive(false)\n            setSnap(curSnaps - 1)\n        } else {\n            // add snap\n            // firebase.database().ref(`/items/${id}/snaps`).set(curSnaps + 1);\n\n            firebase.database().ref(`/items/${id}`).update({ snaps: curSnaps + 1});\n            firebase.database().ref(`/items/${id}`).update({ snapActive: true});\n            setSnapActive(true)\n            setSnap(curSnaps + 1)\n        }\n    }\n    return (\n        <div>\n            {/* Snaps */}\n            <p>Snaps: {curSnaps}</p>\n            <button onClick={handleSnap}>Snap</button>\n            {curSnapActive === true ?\n                <img src={snapTrue}/>\n            : <img src={snapFalse}/>}\n        </div>\n    );\n}\n\nexport default Snap;",["96","97"],"/Users/beckhaywood/dev/repos/chops/src/Components/Comment/sendComment.js",["98","99"],"import React, { useState } from \"react\";\n// import \"./CommentInput.css\";\nimport { db } from \"../../firebase\";\nimport firebase from '../../firebase.js';\nimport Moment from 'moment';\n\nfunction CommentInput({ comments, id, user, pfp }) {\n  const [comment, setComment] = useState(\"\");\n  const [commentMap, setcommentMap] = useState(comments ? comments : []);\n\n  const addComment = () => {\n    // Add a new document in collection \"cities\"\n\n    commentMap.push({\n      comment: comment,\n      username: user,\n      time: Moment(Date.now()).format('ll'),\n      // pfp: pfp\n    });\n\n    firebase.database().ref(`/items/${id}`)\n      .update({\n        comments: commentMap,\n      })\n      .then(function () {\n        console.log(\"Comment Document successfully written!\");\n      })\n      .catch(function (error) {\n        console.error(\"Error writing document: \", error);\n      });\n\n    setComment(\"\");\n  };\n\n  return (\n    <div>\n      <textarea\n        rows=\"1\"\n        value={comment}\n        onChange={(e) => setComment(e.target.value)}\n        placeholder=\"Add a comment..\"\n      ></textarea>\n\n      <button\n        onClick={addComment}\n        style={{\n          color: comment ? \"gray\" : \"lightgrey\",\n          fontWeight: comment ? \"600\" : \"500\",\n        }}\n      >\n        Post\n      </button>\n    </div>\n  );\n}\n\nexport default CommentInput;",["100","101"],"/Users/beckhaywood/dev/repos/chops/src/index.js",[],["102","103"],"/Users/beckhaywood/dev/repos/chops/src/firebase.js",[],"/Users/beckhaywood/dev/repos/chops/src/MakePost.js",[],"/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignUp.js",["104"],"import React, { useState, useEffect } from 'react';\nimport app from 'firebase'\n\nconst SignUp = (props) => {\n    const [formErrors, setFormErrors] = useState([])\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [passwordsMatch, setPasswordsMatch] = useState(\"true\")\n\n    const handleSignUp = (async event => {\n        event.preventDefault();\n        const { username, email, password } = event.target.elements;\n        setFormErrors([])\n\n        if (passwordsMatch) {\n            try {\n                await app\n                    .auth()\n                    .createUserWithEmailAndPassword(email.value, password.value)\n                    .then((userCredential) => {\n\n                        var user = userCredential.user;\n\n                        user.updateProfile({\n                            displayName: (username.value)\n                        }).catch(function (error) {\n                            setFormErrors(formErrors => [...formErrors, error.message])\n                        });\n                    })\n\n            } catch (error) {\n                setFormErrors(formErrors => [...formErrors, error.message])\n            }\n        }\n        else {\n            setFormErrors(formErrors => [...formErrors, \"Passwords don't match\"])\n        }\n    });\n\n    useEffect(() => {\n        setPasswordsMatch(password === confirmPassword)\n    }, [password, confirmPassword]);\n\n    return (\n        <div>\n            <div class=\"centered-flex-row\">\n                <h1 class=\"auth-header\">Sign Up</h1>\n                <button type=\"button\" className=\"close-modal\" onClick={props.cancel}>X</button>\n            </div>\n            <form onSubmit={handleSignUp}>\n                <label>Name:\n                <input name=\"username\" type=\"text\" id=\"username\" required />\n                </label>\n\n                <label>Email:\n                <input name=\"email\" type=\"email\" id=\"email\" required />\n                </label>\n\n                <label>Password:\n                <input name=\"password\" type=\"password\" id=\"password\" value={password} required\n                        onChange={(e) => {\n                            setPassword(e.target.value)\n                        }} />\n                </label>\n\n                <label>Confirm Password:\n                <input type=\"password\" id=\"confirmpassword\" value={confirmPassword} className={`${passwordsMatch ? \"\" : \"inputError\"}`} required\n                        onChange={(e) => {\n                            setConfirmPassword(e.target.value)\n                        }} />\n                </label>\n\n                <div>\n                    {formErrors.map((value, index) => {\n                        return <p key={index} className=\"error-text\">{value}</p>\n                    })}\n                </div>\n\n                <div className=\"centered-flex-row\">\n                    <button type=\"submit\">Sign Up</button>\n                    <div class=\"google-btn\" onClick={props.oauth}>\n                        <div class=\"google-icon-wrapper\">\n                            <img class=\"google-icon-svg\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" />\n                        </div>\n                        <p class=\"btn-text\"><b>Sign in with Google</b></p>\n                    </div>\n                </div>\n\n            </form>\n        </div >\n    );\n};\n\nexport default SignUp\n","/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignInModal.js",[],"/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignUpModal.js",[],"/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignIn.js",["105"],"/Users/beckhaywood/dev/repos/chops/src/Pages/Homepage.js",[],"/Users/beckhaywood/dev/repos/chops/src/Pages/Feed.js",["106"],"import React, { Component } from 'react';\nimport '.././App.css';\nimport firebase from '../firebase.js';\nimport Post from '../Components/Post/Post'\nimport { auth } from '../google-signin'\n\nimport Navbar from '../Components/Navbar/Navbar'\nimport Homepage from './Homepage'\nimport MakePost from '../Components/Post/MakePost'\n\nclass Feed extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentItem: '',\n      linkValue:'',\n      typeValue:'',\n      time: '',\n      username: '',\n      items: [],\n      user: null,\n      show: false,\n      snaps: 0,\n      snapActive: false\n    }\n    this.logout = this.logout.bind(this);\n  }\n  logout() {\n    auth.signOut()\n      .then(() => {\n        this.setState({\n          user: null\n        });\n      });\n  }\n  componentDidMount() {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } \n    });\n    const itemsRef = firebase.database().ref('items');\n    itemsRef.on('value', (snapshot) => {\n      let items = snapshot.val();\n      console.log(items)\n      let newState = [];\n      for (let item in items) {\n        newState.push({\n          id: item,\n          title: items[item].title,\n          songLink: items[item].songLink,\n          postedBy: items[item].postedBy,\n          comments: items[item].comments,\n          time: items[item].time,\n          snaps: items[item].snaps,\n          snapActive: items[item].snapActive\n        });\n      }\n      console.log(newState)\n      this.setState({\n        items: newState\n      });\n    });\n  }\n  removeItem(itemId) {\n    const itemRef = firebase.database().ref(`/items/${itemId}`);\n    itemRef.remove();\n  }\n  \n  onTrigger = () => {\n    this.props.parentCallback(\"Data from child\");\n}\n  render() {\n    return (\n      <div className='app'>\n        {/* If logged into google account display everything */}\n        {this.state.user ?\n          <div>\n            <Navbar \n              user={this.state.user}\n              username={this.state.username}\n              logout={this.logout}\n            />\n            <div className='user-profile'>\n              <img src={this.state.user.photoURL}/>\n            </div>\n            <div className='container'>\n              {/* Form goes here */}\n            <MakePost user={this.state.user}/>\n            <section className='display-item'>\n              <div className=\"wrapper\">\n                <ul>\n                  {this.state.items.map((item) => {\n                    return (\n                      <Post item={item} user={this.state.user.displayName} email={this.state.user.email}/>\n                    )\n                  })}\n                </ul>\n              </div>\n            </section>\n\n            </div>\n          </div>\n          :\n          // Else homepage\n          <div> \n            <Homepage />\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Feed;","/Users/beckhaywood/dev/repos/chops/src/Components/Post/Post.js",["107","108"],"import React from \"react\";\nimport CommentInput from '../Comment/sendComment'\nimport Comment from '../Comment/comment'\nimport pfp from '../Comment/pfp.png'\nimport Snap from '../Snaps/snap'\n\nfunction Post(item, user, email) {\n    console.log(item)\n\n    return (\n        <li key={item.id}>\n            <h3>{item.title}</h3>\n            {item.item.songLink.search(\"soundcloud\") !== -1 ?\n                <iframe title=\"post\"width=\"100%\" height=\"166\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\"\n                src={\"https://w.soundcloud.com/player/?url=\"+ item.item.songLink +\"&am;\"}>\n                </iframe> : null}\n            {item.item.songLink.search(\"spotify\") !== -1 ? \n                <iframe src={(item.item.songLink).replace(\"track\", \"embed/track\")} title=\"post\" width=\"100%\" height=\"100%\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe> : null}\n            {item.item.songLink.search(\"youtube\") !== -1 ?\n                <iframe title=\"post\" width=\"100%\" height=\"166\" src={(item.item.songLink).replace(\"watch?v=\", \"embed/\")} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> : null}\n            <p>Posted by: {item.item.postedBy}\n                {item.item.postedBy === item.user || item.item.postedBy === item.email ?\n                <button onClick={() => this.removeItem(item.id)}>Remove Item</button> : null}\n            </p>\n            {/* Profile Picture */}\n            <img src={pfp} width=\"30px\" height=\"30px\"/>\n            {/* Time Posted */}\n            <time>{item.item.time}</time>\n            {/* Snaps */}\n            <Snap snaps={item.item.snaps} snapActive={item.item.snapActive} id={item.item.id}/>\n            {/* Comment Form */}\n            <CommentInput comments={item.comments} user={item.user} id={item.item.id}/>\n            {/* Comments if not undefined */}\n            {item.item.comments != undefined ?\n                item.item.comments.map((comment) => {\n                    return (\n                        <div>\n                            <Comment comment={comment.comment} username={comment.username} time={comment.time}/>\n                            {comment.username === item.user || comment.username === item.email ?\n                            <button onClick={() => this.removeItem(item.item.comments[0])}>Remove Item</button> : null}\n                        </div>\n                    )\n            }) : null}\n        </li>\n    );\n}\n\nexport default Post;","/Users/beckhaywood/dev/repos/chops/src/Components/Navbar/Navbar.js",[],["109","110"],"/Users/beckhaywood/dev/repos/chops/src/Components/Post/MakePost.js",[],"/Users/beckhaywood/dev/repos/chops/src/Components/Post/PostForm.js",[],"/Users/beckhaywood/dev/repos/chops/src/Components/Comment/comment.js",["111"],"import React from \"react\";\nimport pfp from './pfp.png'\n// import \"./Comment.css\";\n\nfunction Comment({ username, comment, time }) {\n  return (\n    <div className=\"comment\">\n      <img src={pfp} width=\"30px\" height=\"30px\"/>\n      <p>\n        <strong>{username}</strong> {comment}\n      </p>\n      <time>{time}</time>\n    </div>\n  );\n}\n\nexport default Comment;",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"112","replacedBy":"116"},{"ruleId":"114","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":36,"column":17,"nodeType":"120","endLine":36,"endColumn":38},{"ruleId":"118","severity":1,"message":"119","line":37,"column":15,"nodeType":"120","endLine":37,"endColumn":37},{"ruleId":"112","replacedBy":"121"},{"ruleId":"114","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":12},{"ruleId":"123","severity":1,"message":"127","line":9,"column":22,"nodeType":"125","messageId":"126","endLine":9,"endColumn":35},{"ruleId":"112","replacedBy":"128"},{"ruleId":"114","replacedBy":"129"},{"ruleId":"112","replacedBy":"130"},{"ruleId":"114","replacedBy":"131"},{"ruleId":"118","severity":1,"message":"119","line":83,"column":29,"nodeType":"120","endLine":83,"endColumn":142},{"ruleId":"118","severity":1,"message":"119","line":49,"column":29,"nodeType":"120","endLine":49,"endColumn":142},{"ruleId":"118","severity":1,"message":"119","line":85,"column":15,"nodeType":"120","endLine":85,"endColumn":52},{"ruleId":"118","severity":1,"message":"119","line":26,"column":13,"nodeType":"120","endLine":26,"endColumn":56},{"ruleId":"132","severity":1,"message":"133","line":34,"column":33,"nodeType":"134","messageId":"135","endLine":34,"endColumn":35},{"ruleId":"112","replacedBy":"136"},{"ruleId":"114","replacedBy":"137"},{"ruleId":"118","severity":1,"message":"119","line":8,"column":7,"nodeType":"120","endLine":8,"endColumn":50},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],["138"],["139"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["138"],["139"],"no-unused-vars","'db' is defined but never used.","Identifier","unusedVar","'setcommentMap' is assigned a value but never used.",["138"],["139"],["138"],["139"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["138"],["139"],"no-global-assign","no-unsafe-negation"]