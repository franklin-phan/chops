[{"/Users/franklinphan/dev/chops/chops/src/App.js":"1","/Users/franklinphan/dev/chops/chops/src/reportWebVitals.js":"2","/Users/franklinphan/dev/chops/chops/src/index.js":"3","/Users/franklinphan/dev/chops/chops/src/firebase.js":"4","/Users/franklinphan/dev/chops/chops/src/Homepage.js":"5","/Users/franklinphan/dev/chops/chops/src/google-signin.js":"6","/Users/franklinphan/dev/chops/chops/src/Email.js":"7","/Users/franklinphan/dev/chops/chops/src/SignUp.js":"8","/Users/franklinphan/dev/chops/chops/src/SignUpModal.js":"9","/Users/franklinphan/dev/chops/chops/src/SignIn.js":"10","/Users/franklinphan/dev/chops/chops/src/SignInModal.js":"11","/Users/franklinphan/dev/chops/chops/src/Navbar.js":"12","/Users/franklinphan/dev/chops/chops/src/MakePost.js":"13","/Users/franklinphan/dev/chops/chops/src/Feed.js":"14"},{"size":708,"mtime":1615841155707,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1610047723121,"results":"17","hashOfConfig":"16"},{"size":499,"mtime":1610130174691,"results":"18","hashOfConfig":"16"},{"size":401,"mtime":1610075325006,"results":"19","hashOfConfig":"16"},{"size":338,"mtime":1615841155708,"results":"20","hashOfConfig":"16"},{"size":162,"mtime":1610068887111,"results":"21","hashOfConfig":"16"},{"size":425,"mtime":1610070485737,"results":"22","hashOfConfig":"16"},{"size":831,"mtime":1610075529365,"results":"23","hashOfConfig":"16"},{"size":1480,"mtime":1610076113665,"results":"24","hashOfConfig":"16"},{"size":853,"mtime":1610075881037,"results":"25","hashOfConfig":"16"},{"size":1476,"mtime":1610075970508,"results":"26","hashOfConfig":"16"},{"size":567,"mtime":1615838388733,"results":"27","hashOfConfig":"16"},{"size":768,"mtime":1615842786781,"results":"28","hashOfConfig":"16"},{"size":5258,"mtime":1615842658674,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mt6sof",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},"/Users/franklinphan/dev/chops/chops/src/App.js",[],"/Users/franklinphan/dev/chops/chops/src/reportWebVitals.js",[],["61","62"],"/Users/franklinphan/dev/chops/chops/src/index.js",[],["63","64"],"/Users/franklinphan/dev/chops/chops/src/firebase.js",[],"/Users/franklinphan/dev/chops/chops/src/Homepage.js",[],"/Users/franklinphan/dev/chops/chops/src/google-signin.js",[],"/Users/franklinphan/dev/chops/chops/src/Email.js",[],"/Users/franklinphan/dev/chops/chops/src/SignUp.js",[],"/Users/franklinphan/dev/chops/chops/src/SignUpModal.js",[],"/Users/franklinphan/dev/chops/chops/src/SignIn.js",[],"/Users/franklinphan/dev/chops/chops/src/SignInModal.js",[],"/Users/franklinphan/dev/chops/chops/src/Navbar.js",[],"/Users/franklinphan/dev/chops/chops/src/MakePost.js",[],"/Users/franklinphan/dev/chops/chops/src/Feed.js",["65"],"import React, { Component } from 'react';\nimport './App.css';\nimport firebase from './firebase.js';\n\nimport { auth } from './google-signin'\n\nimport Navbar from './Navbar'\nimport Homepage from './Homepage'\nimport MakePost from './MakePost'\n\n\nclass Feed extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentItem: '',\n      linkValue:'',\n      typeValue:'',\n      username: '',\n      items: [],\n      user: null,\n      show: false\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  logout() {\n    auth.signOut()\n      .then(() => {\n        this.setState({\n          user: null\n        });\n      });\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    const itemsRef = firebase.database().ref('items');\n    const item = {\n      title: this.state.currentItem,\n      link: this.state.linkValue,\n      type: this.state.typeValue,\n      user: this.state.user.displayName || this.state.user.email,\n    };\n    itemsRef.push(item);\n    this.setState({\n      currentItem: '',\n      linkValue:'',\n      typeValue:'',\n      username: ''\n    });\n  }\n  componentDidMount() {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } \n    });\n    const itemsRef = firebase.database().ref('items');\n    itemsRef.on('value', (snapshot) => {\n      let items = snapshot.val();\n      let newState = [];\n      for (let item in items) {\n        newState.push({\n          id: item,\n          title: items[item].title,\n          link: items[item].link,\n          type: items[item].type,\n          user: items[item].user\n        });\n      }\n      this.setState({\n        items: newState\n      });\n    });\n  }\n  removeItem(itemId) {\n    const itemRef = firebase.database().ref(`/items/${itemId}`);\n    itemRef.remove();\n  }\n  \n  onTrigger = () => {\n    this.props.parentCallback(\"Data from child\");\n}\n  render() {\n    return (\n      <div className='app'>\n        \n  {this.state.user ?\n    <div>\n      <Navbar \n        user={this.state.user}\n        username={this.state.username}\n        logout={this.logout}/>\n      <div className='user-profile'>\n        <img src={this.state.user.photoURL}/>\n      </div>\n      <div className='container'>\n      <MakePost \n        nameValue={this.state.user.displayName || this.state.user.email}\n        postValue={this.state.currentItem}\n        linkValue={this.state.linkValue}\n        typeValue={this.state.typeValue}\n        handleChange={this.handleChange}\n        handleSubmit={this.handleSubmit}\n        />\n      <section className='display-item'>\n        <div className=\"wrapper\">\n          <ul>\n            {this.state.items.map((item) => {\n              return (\n                <li key={item.id}>\n                  <h3>{item.title}</h3>\n                  {item.link.search(\"soundcloud\") !== -1 ?\n                      <iframe title=\"post\"width=\"100%\" height=\"166\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\"\n                      src={\"https://w.soundcloud.com/player/?url=\"+ item.link +\"&am;\"}>\n                    </iframe> : null}\n                  {item.link.search(\"spotify\") !== -1 ? \n                      <iframe src={(item.link).replace(\"track\", \"embed/track\")} title=\"post\" width=\"100%\" height=\"100%\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe> : null}\n                  {item.link.search(\"youtube\") !== -1 ?\n                    <iframe title=\"post\" width=\"100%\" height=\"166\" src={(item.link).replace(\"watch?v=\", \"embed/\")} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> : null}\n                  <p>Posted by: {item.user}\n                    {item.user === this.state.user.displayName || item.user === this.state.user.email ?\n                      <button onClick={() => this.removeItem(item.id)}>Remove Item</button> : null}\n                  </p>\n                  \n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </section>\n      {/* <section className='display-item'>\n        <h1>My Posts</h1>\n        <div className=\"wrapper\">\n          <ul>\n            {this.state.items.map((item) => {\n              return (\n                <li key={item.id}>\n                    {item.user === this.state.user.displayName || item.user === this.state.user.email ?\n                      <div>\n                      <h3>{item.title}</h3>\n                  <iframe title=\"post\"width=\"100%\" height=\"166\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\"\n                      src={\"https://w.soundcloud.com/player/?url=\"+ item.link +\"&am;\"}>\n                  </iframe>\n\n\n                      <p>Posted by: {item.user}\n                      <button onClick={() => this.removeItem(item.id)}>Remove Item</button>\n                      </p>\n                      </div> : null}\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </section> */}\n  </div>\n    </div>\n    :\n    <div> \n      <Homepage />\n\n    </div>\n\n   \n  }\n\n</div>\n    );\n  }\n}\n\nexport default Feed;",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"66","replacedBy":"70"},{"ruleId":"68","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":101,"column":9,"nodeType":"74","endLine":101,"endColumn":46},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],["75"],["76"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]