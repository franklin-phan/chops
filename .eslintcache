[{"/Users/beckhaywood/dev/repos/chops/src/App.js":"1","/Users/beckhaywood/dev/repos/chops/src/reportWebVitals.js":"2","/Users/beckhaywood/dev/repos/chops/src/google-signin.js":"3","/Users/beckhaywood/dev/repos/chops/src/Components/Snaps/snap.js":"4","/Users/beckhaywood/dev/repos/chops/src/Components/Comment/sendComment.js":"5","/Users/beckhaywood/dev/repos/chops/src/index.js":"6","/Users/beckhaywood/dev/repos/chops/src/firebase.js":"7","/Users/beckhaywood/dev/repos/chops/src/MakePost.js":"8","/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignUp.js":"9","/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignInModal.js":"10","/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignUpModal.js":"11","/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignIn.js":"12","/Users/beckhaywood/dev/repos/chops/src/Pages/Homepage.js":"13","/Users/beckhaywood/dev/repos/chops/src/Pages/Feed.js":"14","/Users/beckhaywood/dev/repos/chops/src/Components/Post/Post.js":"15"},{"size":432,"mtime":1616006772955,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1615834195721,"results":"18","hashOfConfig":"17"},{"size":162,"mtime":1615834195720,"results":"19","hashOfConfig":"17"},{"size":1424,"mtime":1615937771175,"results":"20","hashOfConfig":"17"},{"size":1339,"mtime":1616003302485,"results":"21","hashOfConfig":"17"},{"size":499,"mtime":1615834195720,"results":"22","hashOfConfig":"17"},{"size":401,"mtime":1615834195720,"results":"23","hashOfConfig":"17"},{"size":769,"mtime":1616002296511,"results":"24","hashOfConfig":"17"},{"size":3440,"mtime":1616006449976,"results":"25","hashOfConfig":"17"},{"size":1594,"mtime":1616006498245,"results":"26","hashOfConfig":"17"},{"size":1599,"mtime":1616006487424,"results":"27","hashOfConfig":"17"},{"size":1923,"mtime":1616006494700,"results":"28","hashOfConfig":"17"},{"size":2213,"mtime":1616006916252,"results":"29","hashOfConfig":"17"},{"size":4066,"mtime":1616006891054,"results":"30","hashOfConfig":"17"},{"size":2487,"mtime":1616006983983,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yrxplk",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},"/Users/beckhaywood/dev/repos/chops/src/App.js",[],"/Users/beckhaywood/dev/repos/chops/src/reportWebVitals.js",[],"/Users/beckhaywood/dev/repos/chops/src/google-signin.js",[],["68","69"],"/Users/beckhaywood/dev/repos/chops/src/Components/Snaps/snap.js",["70","71"],"/Users/beckhaywood/dev/repos/chops/src/Components/Comment/sendComment.js",["72","73"],"import React, { useState } from \"react\";\n// import \"./CommentInput.css\";\nimport { db } from \"../../firebase\";\nimport firebase from '../../firebase.js';\nimport Moment from 'moment';\n\nfunction CommentInput({ comments, id, user, pfp }) {\n  const [comment, setComment] = useState(\"\");\n  const [commentMap, setcommentMap] = useState(comments ? comments : []);\n\n  const addComment = () => {\n    // Add a new document in collection \"cities\"\n\n    commentMap.push({\n      comment: comment,\n      username: user,\n      time: Moment(Date.now()).format('ll'),\n      // pfp: pfp\n    });\n\n    firebase.database().ref(`/items/${id}`)\n      .update({\n        comments: commentMap,\n      })\n      .then(function () {\n        console.log(\"Comment Document successfully written!\");\n      })\n      .catch(function (error) {\n        console.error(\"Error writing document: \", error);\n      });\n\n    setComment(\"\");\n  };\n\n  return (\n    <div>\n      <textarea\n        rows=\"1\"\n        value={comment}\n        onChange={(e) => setComment(e.target.value)}\n        placeholder=\"Add a comment..\"\n      ></textarea>\n\n      <button\n        onClick={addComment}\n        style={{\n          color: comment ? \"gray\" : \"lightgrey\",\n          fontWeight: comment ? \"600\" : \"500\",\n        }}\n      >\n        Post\n      </button>\n    </div>\n  );\n}\n\nexport default CommentInput;",["74","75"],"/Users/beckhaywood/dev/repos/chops/src/index.js",[],"/Users/beckhaywood/dev/repos/chops/src/firebase.js",[],"/Users/beckhaywood/dev/repos/chops/src/MakePost.js",[],"/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignUp.js",["76"],"/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignInModal.js",[],"/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignUpModal.js",[],["77","78"],"/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignIn.js",["79"],"/Users/beckhaywood/dev/repos/chops/src/Pages/Homepage.js",[],"/Users/beckhaywood/dev/repos/chops/src/Pages/Feed.js",["80"],"import React, { Component } from 'react';\nimport '.././App.css';\nimport firebase from '../firebase.js';\nimport Post from '../Components/Post/Post'\nimport { auth } from '../google-signin'\n\nimport Navbar from '../Components/Navbar/Navbar'\nimport Homepage from './Homepage'\nimport MakePost from '../MakePost'\nimport Moment from 'moment'\n\nclass Feed extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentItem: '',\n      linkValue:'',\n      typeValue:'',\n      time: '',\n      username: '',\n      items: [],\n      user: null,\n      show: false,\n      snaps: 0,\n      snapActive: false\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  logout() {\n    auth.signOut()\n      .then(() => {\n        this.setState({\n          user: null\n        });\n      });\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    const itemsRef = firebase.database().ref('items');\n    const item = {\n      title: this.state.currentItem,\n      link: this.state.linkValue,\n      type: this.state.typeValue,\n      time: Moment(Date.now()).format('ll'),\n      snaps: this.state.snaps,\n      snapActive: this.state.snaps,\n      user: this.state.user.displayName || this.state.user.email,\n    };\n    itemsRef.push(item);\n    this.setState({\n      currentItem: '',\n      linkValue:'',\n      typeValue:'',\n      username: '',\n      time: '',\n      snaps: 0,\n      snapActive: false\n    });\n  }\n  componentDidMount() {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } \n    });\n    const itemsRef = firebase.database().ref('items');\n    itemsRef.on('value', (snapshot) => {\n      let items = snapshot.val();\n      let newState = [];\n      for (let item in items) {\n        newState.push({\n          id: item,\n          title: items[item].title,\n          link: items[item].link,\n          type: items[item].type,\n          user: items[item].user,\n          comments: items[item].comments,\n          time: items[item].time,\n          snaps: items[item].snaps,\n          snapActive: items[item].snapActive\n        });\n        console.log(this.state.user)\n\n        console.log(item)\n      }\n      this.setState({\n        items: newState\n      });\n    });\n  }\n  removeItem(itemId) {\n    const itemRef = firebase.database().ref(`/items/${itemId}`);\n    itemRef.remove();\n  }\n  \n  onTrigger = () => {\n    this.props.parentCallback(\"Data from child\");\n}\n  render() {\n    return (\n      <div className='app'>\n        {/* If logged into google account display everything */}\n        {this.state.user ?\n          <div>\n            <Navbar \n              user={this.state.user}\n              username={this.state.username}\n              logout={this.logout}\n            />\n            <div className='user-profile'>\n              <img src={this.state.user.photoURL}/>\n            </div>\n            <div className='container'>\n            <MakePost \n              nameValue={this.state.user.displayName || this.state.user.email}\n              postValue={this.state.currentItem}\n              linkValue={this.state.linkValue}\n              typeValue={this.state.typeValue}\n              time={Moment(Date.now()).format('ll')}\n              handleChange={this.handleChange}\n              handleSubmit={this.handleSubmit}\n            />\n            <section className='display-item'>\n              <div className=\"wrapper\">\n                <ul>\n                  {this.state.items.map((item) => {\n                    return (\n                      <Post item={item} user={this.state.user.displayName} email={this.state.user.email}/>\n                    )\n                  })}\n                </ul>\n              </div>\n            </section>\n\n            </div>\n          </div>\n          :\n          // Else homepage\n          <div> \n            <Homepage />\n          </div>\n\n   \n        }\n\n      </div>\n    );\n  }\n}\n\nexport default Feed;","/Users/beckhaywood/dev/repos/chops/src/Components/Post/Post.js",["81","82"],"import React from \"react\";\nimport CommentInput from '../Comment/sendComment'\nimport Comment from '../Comment/comment'\nimport pfp from '../Comment/pfp.png'\nimport Snap from '../Snaps/snap'\n\nfunction Post(item, user, email) {\n    console.log(item)\n\n    return (\n        <li key={item.id}>\n            <h3>{item.title}</h3>\n            {item.item.link.search(\"soundcloud\") !== -1 ?\n                <iframe title=\"post\"width=\"100%\" height=\"166\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\"\n                src={\"https://w.soundcloud.com/player/?url=\"+ item.item.link +\"&am;\"}>\n                </iframe> : null}\n            {item.item.link.search(\"spotify\") !== -1 ? \n                <iframe src={(item.item.link).replace(\"track\", \"embed/track\")} title=\"post\" width=\"100%\" height=\"100%\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe> : null}\n            {item.item.link.search(\"youtube\") !== -1 ?\n                <iframe title=\"post\" width=\"100%\" height=\"166\" src={(item.item.link).replace(\"watch?v=\", \"embed/\")} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> : null}\n            <p>Posted by: {item.item.user}\n                {item.item.user === item.user || item.item.user === item.email ?\n                <button onClick={() => this.removeItem(item.id)}>Remove Item</button> : null}\n            </p>\n            {/* Profile Picture */}\n            <img src={pfp} width=\"30px\" height=\"30px\"/>\n            {/* Time Posted */}\n            <time>{item.item.time}</time>\n            {/* Snaps */}\n            <Snap snaps={item.item.snaps} snapActive={item.item.snapActive} id={item.item.id}/>\n            {/* Comment Form */}\n            <CommentInput comments={item.comments} user={item.user} id={item.item.id}/>\n            {/* Comments if not undefined */}\n            {item.item.comments != undefined ?\n                item.item.comments.map((comment) => {\n                    return (\n                        <div>\n                            <Comment comment={comment.comment} username={comment.username} time={comment.time}/>\n                            {comment.username === item.user || comment.username === item.email ?\n                            <button onClick={() => this.removeItem(item.item.comments[0])}>Remove Item</button> : null}\n                        </div>\n                    )\n            }) : null}\n        </li>\n    );\n}\n\nexport default Post;",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":36,"column":17,"nodeType":"89","endLine":36,"endColumn":38},{"ruleId":"87","severity":1,"message":"88","line":37,"column":15,"nodeType":"89","endLine":37,"endColumn":37},{"ruleId":"90","severity":1,"message":"91","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":12},{"ruleId":"90","severity":1,"message":"94","line":9,"column":22,"nodeType":"92","messageId":"93","endLine":9,"endColumn":35},{"ruleId":"83","replacedBy":"95"},{"ruleId":"85","replacedBy":"96"},{"ruleId":"87","severity":1,"message":"88","line":83,"column":29,"nodeType":"89","endLine":83,"endColumn":142},{"ruleId":"83","replacedBy":"97"},{"ruleId":"85","replacedBy":"98"},{"ruleId":"87","severity":1,"message":"88","line":49,"column":29,"nodeType":"89","endLine":49,"endColumn":142},{"ruleId":"87","severity":1,"message":"88","line":118,"column":15,"nodeType":"89","endLine":118,"endColumn":52},{"ruleId":"87","severity":1,"message":"88","line":26,"column":13,"nodeType":"89","endLine":26,"endColumn":56},{"ruleId":"99","severity":1,"message":"100","line":34,"column":33,"nodeType":"101","messageId":"102","endLine":34,"endColumn":35},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'db' is defined but never used.","Identifier","unusedVar","'setcommentMap' is assigned a value but never used.",["103"],["104"],["103"],["104"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]