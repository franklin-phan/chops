[{"/Users/beckhaywood/dev/repos/chops/src/Components/Post/Post.js":"1","/Users/beckhaywood/dev/repos/chops/src/Components/Comment/comment.js":"2","/Users/beckhaywood/dev/repos/chops/src/Components/Snaps/snap.js":"3","/Users/beckhaywood/dev/repos/chops/src/Components/Post/MakePost.js":"4","/Users/beckhaywood/dev/repos/chops/src/Components/Comment/sendComment.js":"5","/Users/beckhaywood/dev/repos/chops/src/Pages/Feed.js":"6","/Users/beckhaywood/dev/repos/chops/src/Components/Navbar/Navbar.js":"7","/Users/beckhaywood/dev/repos/chops/src/reportWebVitals.js":"8","/Users/beckhaywood/dev/repos/chops/src/store.js":"9","/Users/beckhaywood/dev/repos/chops/src/firebase.js":"10","/Users/beckhaywood/dev/repos/chops/src/User.js":"11","/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignUpModal.js":"12","/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignUp.js":"13","/Users/beckhaywood/dev/repos/chops/src/userRedux.js":"14","/Users/beckhaywood/dev/repos/chops/src/google-signin.js":"15","/Users/beckhaywood/dev/repos/chops/src/App.js":"16","/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignIn.js":"17","/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignInModal.js":"18","/Users/beckhaywood/dev/repos/chops/src/Components/Post/PostForm.js":"19","/Users/beckhaywood/dev/repos/chops/src/Pages/Homepage.js":"20"},{"size":3931,"mtime":1616122068267,"results":"21","hashOfConfig":"22"},{"size":704,"mtime":1616121653759,"results":"23","hashOfConfig":"22"},{"size":1986,"mtime":1616122495660,"results":"24","hashOfConfig":"22"},{"size":1120,"mtime":1616095419006,"results":"25","hashOfConfig":"22"},{"size":1105,"mtime":1616120351078,"results":"26","hashOfConfig":"22"},{"size":1440,"mtime":1616108889719,"results":"27","hashOfConfig":"22"},{"size":754,"mtime":1616111507854,"results":"28","hashOfConfig":"22"},{"size":362,"mtime":1615834195721,"results":"29","hashOfConfig":"22"},{"size":168,"mtime":1616092725692,"results":"30","hashOfConfig":"22"},{"size":992,"mtime":1616098524399,"results":"31","hashOfConfig":"22"},{"size":739,"mtime":1616026846340,"results":"32","hashOfConfig":"22"},{"size":1599,"mtime":1616006487424,"results":"33","hashOfConfig":"22"},{"size":3798,"mtime":1616020310831,"results":"34","hashOfConfig":"22"},{"size":870,"mtime":1616111534684,"results":"35","hashOfConfig":"22"},{"size":162,"mtime":1615834195720,"results":"36","hashOfConfig":"22"},{"size":1817,"mtime":1616110471883,"results":"37","hashOfConfig":"22"},{"size":1923,"mtime":1616006494700,"results":"38","hashOfConfig":"22"},{"size":1594,"mtime":1616006498245,"results":"39","hashOfConfig":"22"},{"size":680,"mtime":1616008550300,"results":"40","hashOfConfig":"22"},{"size":2213,"mtime":1616006916252,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"1yrxplk",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"/Users/beckhaywood/dev/repos/chops/src/Components/Post/Post.js",["92","93","94","95","96"],"import React , { useEffect, useState }from \"react\";\nimport CommentInput from '../Comment/sendComment'\nimport Comment from '../Comment/comment'\nimport pfp from '../Comment/pfp.png'\nimport Snap from '../Snaps/snap'\nimport firebase from '../../firebase'\nimport { db } from '../../firebase';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../../userRedux'\n\nfunction Post(data) {\n    const user = useSelector(selectUser);\n\n    const [comments, setComments] = useState([])\n    const itemID = data.data.id\n    const {postedBy, snaps, songLink, timestamp, title} = data.data.data\n    const {email, displayName} = postedBy\n    \n    useEffect(async () => {\n        const postCommentsRef = db.collection(\"posts\").doc(itemID).collection(\"comments\")\n        const res = await postCommentsRef.orderBy('timestamp', 'desc').onSnapshot(async snapshot => (\n        await setComments(snapshot.docs.map(doc => (\n            {\n              id: doc.id,\n              comment: doc.data(),\n            }\n          )))\n        ))\n    }, [])\n    function convertTimestamp(timestamp) {\n        let date = timestamp.toDate();\n        let mm = date.getMonth();\n        let dd = date.getDate();\n        let yyyy = date.getFullYear();\n      \n        date = mm + '/' + dd + '/' + yyyy;\n        return date;\n      }\n    function removeItem() {\n        db.collection(\"posts\").doc(itemID).delete().then(() => {\n            console.log(\"Document successfully deleted!\");\n        }).catch((error) => {\n            console.error(\"Error removing document: \", error);\n        });\n    }\n\n    return (\n        <li key={itemID}>\n            <h3>{title}</h3>\n            {songLink.search(\"soundcloud\") !== -1 ?\n                <iframe title=\"post\"width=\"100%\" height=\"166\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\"\n                src={\"https://w.soundcloud.com/player/?url=\"+ songLink +\"&am;\"}>\n                </iframe> : null}\n            {songLink.search(\"spotify\") !== -1 ? \n                <iframe src={(songLink).replace(\"track\", \"embed/track\")} title=\"post\" width=\"100%\" height=\"100%\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe> : null}\n            {songLink.search(\"youtube\") !== -1 ?\n                <iframe title=\"post\" width=\"100%\" height=\"166\" src={(songLink).replace(\"watch?v=\", \"embed/\")} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> : null}\n            <p>Posted by: {displayName}\n                {displayName === user.displayName || email === user.email ?\n                <button onClick={() => removeItem(itemID)}>Remove Item</button> : null}\n            </p>\n            {/* Profile Picture */}\n            <img src={pfp} width=\"30px\" height=\"30px\"/>\n            {/* Time Posted */}\n            <time>{convertTimestamp(timestamp)}</time>\n            {/* Snaps */}\n            <Snap snaps={snaps} itemID={itemID} userID={user.uid}/>\n            {/* Comment Form */}\n            <CommentInput itemID={itemID} userID={user.uid} user={postedBy}/>\n\n            {/* Comments if not undefined */}\n            {comments.map((comment) => {\n                console.log(comment)\n                  return (\n                    <Comment data={comment}/>\n                  )\n                })}\n            {/* {item.item.comments != undefined ?\n                item.item.comments.map((comment) => {\n                    return (\n                        <div>\n                            <Comment comment={comment.comment} username={comment.username} time={comment.time}/>\n                            {comment.username === item.user || comment.username === item.email ?\n                            <button onClick={() => this.removeItem(item.item.comments[0])}>Remove Item</button> : null}\n                        </div>\n                    )\n            }) : null} */}\n        </li>\n    );\n}\n\nexport default Post;","/Users/beckhaywood/dev/repos/chops/src/Components/Comment/comment.js",["97","98"],"import React from \"react\";\nimport pfp from './pfp.png'\n// import \"./Comment.css\";\n\nfunction Comment({ data }) {\n  const {id, comment} = data\n  const {body, postedBy, timestamp} = comment\n  // console.log(comment)\n  function convertTimestamp(timestamp) {\n    let date = timestamp.toDate();\n    let mm = date.getMonth();\n    let dd = date.getDate();\n    let yyyy = date.getFullYear();\n  \n    date = mm + '/' + dd + '/' + yyyy;\n    return date;\n  }\n  return (\n    <div className=\"comment\">\n      <img src={pfp} width=\"30px\" height=\"30px\"/>\n      <p>\n        <strong>{postedBy.displayName}</strong> {body}\n      </p>\n      <time>{convertTimestamp(timestamp)}</time>\n    </div>\n  );\n}\n\nexport default Comment;","/Users/beckhaywood/dev/repos/chops/src/Components/Snaps/snap.js",["99","100","101","102","103","104"],"/Users/beckhaywood/dev/repos/chops/src/Components/Post/MakePost.js",[],["105","106"],"/Users/beckhaywood/dev/repos/chops/src/Components/Comment/sendComment.js",["107"],"import React, { useState } from \"react\";\n// import \"./CommentInput.css\";\nimport { db } from \"../../firebase\";\nimport firebase from 'firebase';\n\nfunction CommentInput({ itemID, userID, user }) {\n  const [body, setBody] = useState(\"\");\n  // const [commentMap, setcommentMap] = useState(comments ? comments : []);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const commentsRef = db.collection('posts').doc(itemID).collection(\"comments\");\n\n    const res = await commentsRef.add({\n        body: body,\n        postedBy: user,\n        snaps: 0,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    }, { merge: true });\n    setBody('');    \n  }\n\n  return (\n    <div>\n      <textarea\n        rows=\"1\"\n        value={body}\n        onChange={(e) => setBody(e.target.value)}\n        placeholder=\"Add a comment..\"\n      ></textarea>\n\n      <button\n        onClick={handleSubmit}\n        style={{\n          color: body ? \"gray\" : \"lightgrey\",\n          fontWeight: body ? \"600\" : \"500\",\n        }}\n      >\n        Post\n      </button>\n    </div>\n  );\n}\n\nexport default CommentInput;","/Users/beckhaywood/dev/repos/chops/src/Pages/Feed.js",["108","109","110","111","112"],"import React, { useEffect, useState } from 'react';\nimport '.././App.css';\nimport Post from '../Components/Post/Post'\nimport { auth } from '../google-signin'\nimport { db } from '../firebase';\nimport firebase from 'firebase';\nimport { useSelector } from 'react-redux';\nimport {selectUser} from '../userRedux'\n\nimport Navbar from '../Components/Navbar/Navbar'\nimport Homepage from './Homepage'\nimport MakePost from '../Components/Post/MakePost'\n\nfunction Feed() {\n  const user = useSelector(selectUser);\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    console.log(user)\n    db.collection(\"posts\").orderBy('timestamp', 'desc').onSnapshot(snapshot => (\n      setPosts(snapshot.docs.map(doc => (\n        {\n          id: doc.id,\n          data: doc.data(),\n        }\n      )))\n    ))\n    console.log(posts)\n  }, [])\n  \n  return (\n    <div className='app'>\n      <Navbar \n        user={user}\n      />\n\n        <div className='user-profile'>\n          <img src={user.photoUrl}/>\n        </div>\n        <div className='container'>\n          <MakePost user={user}/>\n          <section className='display-item'>\n            <div className=\"wrapper\">\n              <ul>\n                {posts.map((data) => {\n                  return (\n                    <Post data={data}/>\n                  )\n                })}\n              </ul>\n            </div>\n          </section>\n        </div>\n      </div>\n  );\n};\n\nexport default Feed;","/Users/beckhaywood/dev/repos/chops/src/Components/Navbar/Navbar.js",[],"/Users/beckhaywood/dev/repos/chops/src/reportWebVitals.js",[],["113","114"],"/Users/beckhaywood/dev/repos/chops/src/store.js",[],"/Users/beckhaywood/dev/repos/chops/src/firebase.js",[],"/Users/beckhaywood/dev/repos/chops/src/User.js",[],"/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignUpModal.js",[],"/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignUp.js",["115"],"import React, { useState, useEffect } from 'react';\nimport app from 'firebase'\nimport CreateUser from '../../User'\nimport { auth } from '../../google-signin'\n\nconst SignUp = (props) => {\n    const [formErrors, setFormErrors] = useState([])\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [passwordsMatch, setPasswordsMatch] = useState(\"true\")\n\n    const handleSignUp = (async event => {\n        event.preventDefault();\n        const { username, email, password } = event.target.elements;\n        setFormErrors([])\n\n        if (passwordsMatch) {\n            try {\n                await app\n                    .auth()\n                    .createUserWithEmailAndPassword(email.value, password.value)\n                    .then((userCredential) => {\n\n                        var user = userCredential.user;\n\n                        user.updateProfile({\n                            displayName: (username.value)\n                        }).catch(function (error) {\n                            setFormErrors(formErrors => [...formErrors, error.message])\n                        });\n                    }).then(() => {\n                        auth.onAuthStateChanged((user) => {\n                            if (user) {\n                                CreateUser(user.displayName, user.email, user.id)\n                            } \n                          });\n                    })\n\n            } catch (error) {\n                setFormErrors(formErrors => [...formErrors, error.message])\n            }\n        }\n        else {\n            setFormErrors(formErrors => [...formErrors, \"Passwords don't match\"])\n        }\n    });\n\n    useEffect(() => {\n        setPasswordsMatch(password === confirmPassword)\n    }, [password, confirmPassword]);\n\n    return (\n        <div>\n            <div class=\"centered-flex-row\">\n                <h1 class=\"auth-header\">Sign Up</h1>\n                <button type=\"button\" className=\"close-modal\" onClick={props.cancel}>X</button>\n            </div>\n            <form onSubmit={handleSignUp}>\n                <label>Name:\n                <input name=\"username\" type=\"text\" id=\"username\" required />\n                </label>\n\n                <label>Email:\n                <input name=\"email\" type=\"email\" id=\"email\" required />\n                </label>\n\n                <label>Password:\n                <input name=\"password\" type=\"password\" id=\"password\" value={password} required\n                        onChange={(e) => {\n                            setPassword(e.target.value)\n                        }} />\n                </label>\n\n                <label>Confirm Password:\n                <input type=\"password\" id=\"confirmpassword\" value={confirmPassword} className={`${passwordsMatch ? \"\" : \"inputError\"}`} required\n                        onChange={(e) => {\n                            setConfirmPassword(e.target.value)\n                        }} />\n                </label>\n\n                <div>\n                    {formErrors.map((value, index) => {\n                        return <p key={index} className=\"error-text\">{value}</p>\n                    })}\n                </div>\n\n                <div className=\"centered-flex-row\">\n                    <button type=\"submit\">Sign Up</button>\n                    <div class=\"google-btn\" onClick={props.oauth}>\n                        <div class=\"google-icon-wrapper\">\n                            <img class=\"google-icon-svg\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" />\n                        </div>\n                        <p class=\"btn-text\"><b>Sign in with Google</b></p>\n                    </div>\n                </div>\n\n            </form>\n        </div >\n    );\n};\n\nexport default SignUp\n",["116","117"],"/Users/beckhaywood/dev/repos/chops/src/userRedux.js",[],"/Users/beckhaywood/dev/repos/chops/src/google-signin.js",[],"/Users/beckhaywood/dev/repos/chops/src/App.js",["118","119"],"\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\nimport { login, logout, selectUser } from './userRedux';\nimport Feed from './Pages/Feed'\nimport Homepage from './Pages/Homepage'\nimport { auth } from './google-signin'\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const [shouldUpdate, setShouldUpdate] = useState(false)\n\n  useEffect(() => {\n    auth.onAuthStateChanged(userAuth => {\n      if (userAuth) {\n        // user is logged in\n        dispatch(login({\n          email: userAuth.email,\n          uid: userAuth.uid,\n          displayName: userAuth.displayName,\n          photoUrl: userAuth.photoURL,\n        }))\n      } else {\n        // user is logged out\n        setShouldUpdate(!shouldUpdate) // ! Sets to opposite\n      }\n    })\n  }, [dispatch]);\n\n  return (\n      <div className=\"app\">\n\n        {!user ? (\n          <Homepage />\n        ) : (\n          <div className=\"app_body\">\n            <Feed/>\n          </div>\n        )}\n        \n      </div>\n  );\n}\n\nexport default App;\n// class App extends Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       user: null,\n//       data: null\n//     }\n//   }\n//   componentDidMount() {\n//     auth.onAuthStateChanged((user) => {\n//       if (user) {\n//         this.setState({ user }); \n//         const userRef = firebase.database().ref('users');\n//         userRef.on('value', (snapshot) => {\n//           let checkUser = snapshot.val();\n//           if (checkUser) {\n//           } else {\n//             CreateUser(user.displayName, user.email, user.uid)\n//           }\n//         })\n//       } \n//     });\n//   }\n\n//   handleCallback = (childData) =>{\n//     this.setState({data: childData})\n//   }\n","/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignIn.js",["120"],"/Users/beckhaywood/dev/repos/chops/src/Components/Authentication/SignInModal.js",[],"/Users/beckhaywood/dev/repos/chops/src/Components/Post/PostForm.js",[],["121","122"],"/Users/beckhaywood/dev/repos/chops/src/Pages/Homepage.js",[],{"ruleId":"123","severity":1,"message":"124","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":16},{"ruleId":"127","severity":1,"message":"128","line":19,"column":15,"nodeType":"129","endLine":29,"endColumn":6},{"ruleId":"123","severity":1,"message":"130","line":21,"column":15,"nodeType":"125","messageId":"126","endLine":21,"endColumn":18},{"ruleId":"127","severity":1,"message":"131","line":29,"column":8,"nodeType":"132","endLine":29,"endColumn":10,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":63,"column":13,"nodeType":"136","endLine":63,"endColumn":56},{"ruleId":"123","severity":1,"message":"137","line":6,"column":10,"nodeType":"125","messageId":"126","endLine":6,"endColumn":12},{"ruleId":"134","severity":1,"message":"135","line":20,"column":7,"nodeType":"136","endLine":20,"endColumn":50},{"ruleId":"127","severity":1,"message":"128","line":12,"column":15,"nodeType":"129","endLine":22,"endColumn":8},{"ruleId":"127","severity":1,"message":"138","line":22,"column":10,"nodeType":"132","endLine":22,"endColumn":12,"suggestions":"139"},{"ruleId":"123","severity":1,"message":"130","line":26,"column":15,"nodeType":"125","messageId":"126","endLine":26,"endColumn":18},{"ruleId":"123","severity":1,"message":"130","line":31,"column":15,"nodeType":"125","messageId":"126","endLine":31,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":56,"column":17,"nodeType":"136","endLine":56,"endColumn":38},{"ruleId":"134","severity":1,"message":"135","line":57,"column":15,"nodeType":"136","endLine":57,"endColumn":37},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"123","severity":1,"message":"130","line":14,"column":11,"nodeType":"125","messageId":"126","endLine":14,"endColumn":14},{"ruleId":"123","severity":1,"message":"144","line":4,"column":10,"nodeType":"125","messageId":"126","endLine":4,"endColumn":14},{"ruleId":"123","severity":1,"message":"124","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":16},{"ruleId":"123","severity":1,"message":"145","line":12,"column":8,"nodeType":"125","messageId":"126","endLine":12,"endColumn":16},{"ruleId":"127","severity":1,"message":"146","line":30,"column":6,"nodeType":"132","endLine":30,"endColumn":8,"suggestions":"147"},{"ruleId":"134","severity":1,"message":"135","line":39,"column":11,"nodeType":"136","endLine":39,"endColumn":37},{"ruleId":"140","replacedBy":"148"},{"ruleId":"142","replacedBy":"149"},{"ruleId":"134","severity":1,"message":"135","line":91,"column":29,"nodeType":"136","endLine":91,"endColumn":142},{"ruleId":"140","replacedBy":"150"},{"ruleId":"142","replacedBy":"151"},{"ruleId":"123","severity":1,"message":"152","line":5,"column":17,"nodeType":"125","messageId":"126","endLine":5,"endColumn":23},{"ruleId":"127","severity":1,"message":"153","line":30,"column":6,"nodeType":"132","endLine":30,"endColumn":16,"suggestions":"154"},{"ruleId":"134","severity":1,"message":"135","line":49,"column":29,"nodeType":"136","endLine":49,"endColumn":142},{"ruleId":"140","replacedBy":"155"},{"ruleId":"142","replacedBy":"156"},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'itemID'. Either include it or remove the dependency array.","ArrayExpression",["157"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'id' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'itemID' and 'userID'. Either include them or remove the dependency array. If 'setSnapActive' needs the current value of 'itemID', you can also switch to useReducer instead of useState and read 'itemID' in the reducer.",["158"],"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"'auth' is defined but never used.","'Homepage' is defined but never used.","React Hook useEffect has missing dependencies: 'posts' and 'user'. Either include them or remove the dependency array.",["161"],["159"],["160"],["159"],["160"],"'logout' is defined but never used.","React Hook useEffect has a missing dependency: 'shouldUpdate'. Either include it or remove the dependency array. You can also do a functional update 'setShouldUpdate(s => ...)' if you only need 'shouldUpdate' in the 'setShouldUpdate' call.",["162"],["159"],["160"],{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [itemID]",{"range":"171","text":"172"},"Update the dependencies array to be: [itemID, userID]",{"range":"173","text":"174"},"Update the dependencies array to be: [posts, user]",{"range":"175","text":"176"},"Update the dependencies array to be: [dispatch, shouldUpdate]",{"range":"177","text":"178"},[1037,1039],"[itemID]",[781,783],"[itemID, userID]",[886,888],"[posts, user]",[870,880],"[dispatch, shouldUpdate]"]